@model OMGT_Lab1.Models.Vector

@{
    ViewBag.Title = "Edit";
}

<h2>Edit vector of @ViewData["Alternative"]</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>@ViewData["Criterion"]</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.VectorId)
    <div class="form-group">
        @Html.Label("Mark", "Mark", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @if (Model.Mark.Criterion.Type == OMGT_Lab1.Models.Enums.CriteriaType.Quantitative)
            {
                @Html.EditorFor(model => model.Mark.NumericMark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mark.NumericMark, "", new { @class = "text-danger" })
            }
            else
            {
                @Html.EditorFor(model => model.Mark.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mark.Name, "", new { @class = "text-danger" })
            }

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

