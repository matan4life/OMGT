@model OMGT_Lab1.Models.Vector

@{
    ViewBag.Title = "Add mark";
}

<h2>Add vectors to @ViewData["AlternativeName"]</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Hidden("AlternativeId", ViewData["AlternativeId"], htmlAttributes: new { @class = "form-control" })
    @if (ViewBag.Criteria is null || ViewBag.Criteria.Count == 0)
    {
        @Html.Label("", "There is nothing to add!", htmlAttributes: new { @class = "control-label col-md-2" })
    }
    else
    {
        <div class="container-fluid">
        @foreach (var el in ViewBag.Criteria)
        {
            if (el.Type == OMGT_Lab1.Models.Enums.CriteriaType.Quantitative)
            {
                <div class="row form-group" >
                    @Html.LabelFor(model => model.Mark.NumericMark, (string)el.Name, htmlAttributes: new { @class = "control-label col-lg-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Mark.NumericMark, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mark.NumericMark, "", new { @class = "text-danger" })
                    </div>
                    @Html.Label("", el.Unit.ToString(), htmlAttributes: new { @class = "" })
                </div>
            }
            else
            {
                <div class="row form-group">
                    @Html.LabelFor(model => model.Mark.Name, (string)el.Name, htmlAttributes: new { @class = "control-label col-lg-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Mark.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mark.Name, "", new { @class = "text-danger" })
                    </div>
                    @Html.Label("", el.Unit.ToString(), htmlAttributes: new { @class = "" })
                </div>
            }
        }
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

